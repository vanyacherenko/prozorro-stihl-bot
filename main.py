import requests
import time
import os
from datetime import datetime, timezone
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö –∑ .env
load_dotenv()
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")

# –°–ø–∏—Å–æ–∫ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
CHAT_IDS = [
    "1971727077",
    # "7981671066",
]

CHECK_INTERVAL = 15       # —Å–µ–∫. ‚Äî —ñ–Ω—Ç–µ—Ä–≤–∞–ª –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ Prozorro
STATUS_INTERVAL = 86400   # —Ä–∞–∑ –Ω–∞ –¥–æ–±—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Ä–æ–±–æ—Ç—É
TARGET_REGION = "—á–µ—Ä–Ω—ñ–≥—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å"
MAX_TENDER_AGE_HOURS = 1  # –±—Ä–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ —Ç–µ–Ω–¥–µ—Ä–∏ –∑–∞ –æ—Å—Ç–∞–Ω–Ω—é –≥–æ–¥–∏–Ω—É

KEYWORDS = [
    "stihl", "—à—Ç–∏–ª—å", "—à—Ç–∏–ª—å —É–∫—Ä–∞—ó–Ω–∞", "–±–µ–Ω–∑–æ–ø–∏–ª–∞", "–º–æ—Ç–æ–ø–∏–ª–∞", "chainsaw",
    "ms 170", "ms 180", "ms 211", "ms 230", "ms 250", "ms 260", "ms 261", "ms 271", "ms 290",
    "ms 311", "ms 361", "ms 362", "ms 391", "ms 400", "ms 441", "ms 461", "ms 462",
    "ms 500", "ms 500i", "ms 661", "ms 880", "msa 120", "msa 140", "msa 160",
    "msa 200", "msa 220", "–º–æ—Ç–æ–∫–æ—Å–∞", "–∫–æ—Å–∞", "trimmer", "—Ç—Ä–∏–º–µ—Ä",
    "fs 38", "fs 55", "fs 70", "fs 94", "fs 120", "fs 131", "fs 250", "fs 260",
    "fs 360", "fs 410", "fs 460", "fs 490", "–∫—É—â–æ—Ä—ñ–∑", "hs 45", "hs 56", "hs 82",
    "hs 87", "–≤–∏—Å–æ—Ç–æ—Ä—ñ–∑", "ht 75", "ht 101", "ht 131", "–ø–æ–≤—ñ—Ç—Ä–æ–¥—É–≤–∫–∞", "–ø–æ–≤—ñ—Ç—Ä–æ–¥—É–≤",
    "–ø–∏–ª–æ—Å–æ—Å", "br 200", "br 350", "br 430", "br 600", "br 700", "br 800",
    "–ø–æ–¥—Ä—ñ–±–Ω—é–≤–∞—á", "gh 370", "gh 460", "–º–∏–π–∫–∞", "reh 120", "reh 160",
    "–º–æ—Ç–æ–±—É—Ä", "bt 121", "bt 131", "–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä stihl", "–ª–∞–Ω—Ü—é–≥", "—à–∏–Ω–∞",
    "–º–∞—Å–ª–æ stihl", "–∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏", "—Å—Ç–∞—Ä—Ç–µ—Ä", "—Ñ—ñ–ª—å—Ç—Ä", "—Å–≤—ñ—á–∫–∞"
]

seen_ids = set()
last_status_time = time.monotonic()
last_offset = None


def tender_to_text(data):
    """–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–µ–Ω–¥–µ—Ä–∞ —É —Å—É—Ü—ñ–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç."""
    if isinstance(data, dict):
        return " ".join(tender_to_text(v) for v in data.values())
    elif isinstance(data, list):
        return " ".join(tender_to_text(v) for v in data)
    elif isinstance(data, (str, int, float)):
        return str(data)
    return ""


def send_message(text):
    """–í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É Telegram."""
    for chat_id in CHAT_IDS:
        try:
            url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
            data = {"chat_id": chat_id, "text": text}
            response = requests.post(url, data=data)
            if response.status_code != 200:
                print(f"‚ùå –ù–µ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ {chat_id}:", response.text)
            else:
                print(f"‚úÖ –ù–∞–¥—ñ—Å–ª–∞–Ω–æ {chat_id}: {text[:50]}")
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ {chat_id}:", e)


def search_prozorro():
    """–û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –æ—Å—Ç–∞–Ω–Ω—ñ—Ö —Ç–µ–Ω–¥–µ—Ä—ñ–≤."""
    global last_offset
    url = "https://public.api.openprocurement.org/api/2.5/tenders"
    params = {"limit": 100, "descending": "1"}
    if last_offset:
        params["offset"] = last_offset
    try:
        response = requests.get(url, params=params, timeout=10)
        if response.status_code != 200:
            print("‚ùå –ó–∞–ø–∏—Ç –Ω–µ –≤–¥–∞–≤—Å—è:", response.status_code)
            return []
        json_data = response.json()
        last_offset = json_data.get("next_page", {}).get("offset", last_offset)
        return json_data.get("data", [])
    except Exception as e:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ:", e)
        return []


def get_tender_details(tid):
    """–û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≤–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ç–µ–Ω–¥–µ—Ä."""
    url = f"https://public.api.openprocurement.org/api/2.5/tenders/{tid}"
    try:
        response = requests.get(url, timeout=10)
        if response.status_code != 200:
            return {}
        return response.json().get("data", {})
    except Exception as e:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–µ—Ç–∞–ª–µ–π:", e)
        return {}


def is_relevant(tender):
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞ —Ç–∞ —Ä–µ–≥—ñ–æ–Ω."""
    full_text = tender_to_text(tender).lower()
    return any(keyword in full_text for keyword in KEYWORDS)
    # –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä –ø–æ —Ä–µ–≥—ñ–æ–Ω—É:
    # region = tender.get("procuringEntity", {}).get("address", {}).get("region", "").lower()
    # return any(keyword in full_text for keyword in KEYWORDS) and TARGET_REGION in region


def format_message(tender):
    """–§–æ—Ä–º—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è Telegram."""
    return (
        f"üîî –í–∏—è–≤–ª–µ–Ω–∞ –∑–∞–∫—É–ø—ñ–≤–ª—è ST–ÜHL-—Ç–∏–ø—É!\n"
        f"üìå –ù–∞–∑–≤–∞: {tender.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∏')}\n"
        f"üè¢ –ó–∞–º–æ–≤–Ω–∏–∫: {tender.get('procuringEntity', {}).get('name', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
        f"üåç –û–±–ª–∞—Å—Ç—å: {tender.get('procuringEntity', {}).get('address', {}).get('region', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
        f"üÜî ID –∑–∞–∫—É–ø—ñ–≤–ª—ñ: {tender.get('id', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
        f"üîó https://prozorro.gov.ua/tender/{tender.get('tenderID', tender.get('id'))}"
    )


def main():
    global last_status_time
    while True:
        try:
            now = time.monotonic()
            if now - last_status_time > STATUS_INTERVAL:
                send_message("‚úÖ –ü—Ä–æ–≥—Ä–∞–º–∞ –ø—Ä–∞—Ü—é—î ‚Äî " + datetime.now().strftime("%Y-%m-%d %H:%M:%S"))
                last_status_time = now

            print("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–µ–Ω–¥–µ—Ä—ñ–≤...")
            tenders = search_prozorro()

            for tender in tenders:
                tid = tender.get("id")
                if tid and tid not in seen_ids:
                    details = get_tender_details(tid)
                    if details and is_relevant(details):
                        try:
                            tender_date = datetime.fromisoformat(details.get("dateModified"))
                            # –Ø–∫—â–æ tender_date –º–∞—î tzinfo ‚Äî –ø–µ—Ä–µ–≤–æ–¥–∏–º–æ now —Ç–µ–∂ —É UTC
                            if tender_date.tzinfo is not None:
                                now_utc = datetime.now(timezone.utc)
                            else:
                                now_utc = datetime.now()

                            if (now_utc - tender_date).total_seconds() <= MAX_TENDER_AGE_HOURS * 3600:
                                send_message(format_message(details))
                        except Exception as date_err:
                            print("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –¥–∞—Ç–∏:", date_err)

                    seen_ids.add(tid)

        except Exception as e:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ —Ü–∏–∫–ª—ñ:", e)

        time.sleep(CHECK_INTERVAL)


if __name__ == "__main__":
    main()





















