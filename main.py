import requests
import time
from datetime import datetime, timezone
import telegram

# ======== –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è =========
KEYWORDS = [
    "stihl", "—à—Ç–∏–ª—å", "—à—Ç–∏–ª—å —É–∫—Ä–∞—ó–Ω–∞",
    # –ú–æ—Ç–æ–ø–∏–ª–∏ (–±–µ–Ω–∑–æ–ø–∏–ª–∏)
    "–±–µ–Ω–∑–æ–ø–∏–ª–∞", "–º–æ—Ç–æ–ø–∏–ª–∞", "chainsaw",
    "ms 170", "ms 180", "ms 211", "ms 230", "ms 250", "ms 260",
    "ms 261", "ms 271", "ms 290", "ms 311", "ms 361", "ms 362",
    "ms 391", "ms 400", "ms 441", "ms 461", "ms 462", "ms 500",
    "ms 500i", "ms 661", "ms 880",
    # –ê–∫—É–º—É–ª—è—Ç–æ—Ä–Ω—ñ –ø–∏–ª–∏
    "msa 120", "msa 140", "msa 160", "msa 200", "msa 220",
    # –ö–æ—Å–∏, –º–æ—Ç–æ–∫–æ—Å–∏, —Ç—Ä–∏–º–µ—Ä–∏
    "–º–æ—Ç–æ–∫–æ—Å–∞", "–∫–æ—Å–∞", "trimmer", "—Ç—Ä–∏–º–µ—Ä",
    "fs 38", "fs 55", "fs 70", "fs 94", "fs 120", "fs 131",
    "fs 250", "fs 260", "fs 360", "fs 410", "fs 460", "fs 490",
    # –ö—É—â–æ—Ä—ñ–∑–∏, –Ω–æ–∂–∏—Ü—ñ
    "–∫—É—â–æ—Ä—ñ–∑", "–∫—É—â–æ—Ä—ñ–∑–∏", "hs 45", "hs 56", "hs 82", "hs 87",
    # –í–∏—Å–æ—Ç–æ—Ä—ñ–∑–∏
    "–≤–∏—Å–æ—Ç–æ—Ä—ñ–∑", "ht 75", "ht 101", "ht 131",
    # –ü–æ–≤—ñ—Ç—Ä–æ–¥—É–≤–∫–∏, –ø–∏–ª–æ—Å–æ—Å–∏
    "–ø–æ–≤—ñ—Ç—Ä–æ–¥—É–≤–∫–∞", "–ø–æ–≤—ñ—Ç—Ä–æ–¥—É–≤", "–ø–∏–ª–æ—Å–æ—Å",
    "br 200", "br 350", "br 430", "br 600", "br 700", "br 800",
    # –ü–æ–¥—Ä—ñ–±–Ω—é–≤–∞—á—ñ
    "—Å–∞–¥–æ–≤–∏–π –ø–æ–¥—Ä—ñ–±–Ω—é–≤–∞—á", "–ø–æ–¥—Ä—ñ–±–Ω—é–≤–∞—á –≥—ñ–ª–æ–∫", "gh 370", "gh 460",
    # –ú–∏–π–∫–∏ –≤–∏—Å–æ–∫–æ–≥–æ —Ç–∏—Å–∫—É
    "–º–∏–π–∫–∞ –≤–∏—Å–æ–∫–æ–≥–æ —Ç–∏—Å–∫—É", "–º–∏–π–∫–∞", "reh 120", "reh 160",
    # –ú–æ—Ç–æ–±—É—Ä–∏
    "–º–æ—Ç–æ–±—É—Ä", "bt 121", "bt 131",
    # –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∏
    "–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä stihl",
    # –ö–æ–º–ø–ª–µ–∫—Ç—É—é—á—ñ
    "–ª–∞–Ω—Ü—é–≥", "—à–∏–Ω–∞", "–º–∞—Å–ª–æ stihl", "–∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏ stihl", "—Å—Ç–∞—Ä—Ç–µ—Ä", "—Ñ—ñ–ª—å—Ç—Ä –ø–æ–≤—ñ—Ç—Ä—è–Ω–∏–π", "—Å–≤—ñ—á–∫–∞ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è"]
# REGION = "–ß–µ—Ä–Ω—ñ–≥—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å"
CHECK_INTERVAL = 5  # –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ –∫–æ–∂–Ω—ñ 5 c
TELEGRAM_TOKEN = "8047019586:AAEhziintMV5wDI2JOSPmPf76uuAhGGFbBA"
CHAT_ID = "1971727077"

bot = telegram.Bot(token=TELEGRAM_TOKEN)

def search_prozorro():
    url = "https://public.api.openprocurement.org/api/2.5/tenders"
    params = {
        "offset":  "2025-03-01T00:00:00Z" #datetime.now(timezone.utc).isoformat(),
        "limit": 100,
        "descending": "1",
        "mode": "test.exclusion"  # —â–æ–± –≤–∏–∫–ª—é—á–∏—Ç–∏ —Ç–µ—Å—Ç–æ–≤—ñ
    }
    response = requests.get(url, params=params)
    if response.status_code != 200:
        print("–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É –¥–æ Prozorro")
        return []
    return response.json().get("data", [])

def is_relevant(tender):
    title = tender.get("title", "").lower()
    description = tender.get("description", "").lower()
    combined_text = title + " " + description
    if not any(keyword in combined_text for keyword in KEYWORDS):
        return False
    # –Ø–∫—â–æ —Ö–æ—á–µ—à –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –æ–±–ª–∞—Å—Ç—ñ, —Ä–æ–∑–∫–æ–º–µ–Ω—Ç—É–π —Ü–µ–π –±–ª–æ–∫:
    # region = tender.get("procuringEntity", {}).get("address", {}).get("region", "")
    # if REGION.lower() not in region.lower():
    #     return False
    return True
def send_message(text):
    try:
        bot.send_message(chat_id=CHAT_ID, text=text, parse_mode=telegram.constants.ParseMode.MARKDOWN)
    except Exception as e:
        print("–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:", e)

def format_message(tender):
    return (
        f"üîî *–í–∏—è–≤–ª–µ–Ω–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–∞ –∑–∞–∫—É–ø—ñ–≤–ª—è ST–ÜHL-—Ç–∏–ø—É!*\n"
        f"üìå –ù–∞–∑–≤–∞: {tender.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∏')}\n"
        f"üè¢ –ó–∞–º–æ–≤–Ω–∏–∫: {tender.get('procuringEntity', {}).get('name', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
        f"üåç –û–±–ª–∞—Å—Ç—å: {tender.get('procuringEntity', {}).get('address', {}).get('region', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
        f"üîó https://prozorro.gov.ua/tender/{tender.get('id')}"
    )

seen_ids = set()

while True:
    try:
        tenders = search_prozorro()
        for tender in tenders:
            if tender["id"] in seen_ids:
                continue
            if is_relevant(tender):
                msg = format_message(tender)
                send_message(msg)
            seen_ids.add(tender["id"])
    except Exception as ex:
        print("–ü–æ–º–∏–ª–∫–∞ –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É —Ü–∏–∫–ª—ñ:", ex)
    time.sleep(CHECK_INTERVAL)

